object CheckCommand "my-nscp-local" {
	import "nscp-local"

	arguments += {
		"--show-all" = {
      set_if = "$nscp_showall$"
		}
	}

	vars.nscp_showall = false
}

object CheckCommand "my-nscp-local-cpu" {
	import "my-nscp-local"

	arguments += {
		"--time" = {
			value = "$nscp_cpu_time$"
			repeat_key = true
		}
		"--warning" = {
			value = "load>$nscp_cpu_warning$"
		}
		"--critical" = {
			value = "load>$nscp_cpu_critical$"
		}
		"-a" = {
			value = "$nscp_cpu_arguments$"
			skip_key = true
		}
	}

	vars.nscp_query = "check_cpu"
  vars.nscp_showall = "$nscp_cpu_showall$"

  vars.nscp_cpu_time = [ "1m", "5m", "15m" ]
  vars.nscp_cpu_showall = true
  vars.nscp_cpu_warning = 80
  vars.nscp_cpu_critical = 90
}

object CheckCommand "my-nscp-local-memory" {
	import "my-nscp-local"

	arguments += {
		"--type=committed" = {
			set_if = "$nscp_memory_committed$"
		}
		"--type=physical" = {
			set_if = "$nscp_memory_physical$"
		}
		"--warning" = {
			value = "$nscp_memory_op$ $nscp_memory_warning$"
		}
		"--critical" = {
			value = "$nscp_memory_op$ $nscp_memory_critical$"
		}
		"-a" = {
			value = "$nscp_memory_arguments$"
			skip_key = true
    }
	}

	vars.nscp_query = "check_memory"
  vars.nscp_showall = "$nscp_memory_showall$"

	vars.nscp_memory_op = {{
		if (macro("$nscp_memory_free$") == false) {
			return "used >"
		} else {
			return "free <"
		}
	}}

	vars.nscp_memory_commited = false
	vars.nscp_memory_physical = true
	vars.nscp_memory_free = true
	vars.nscp_memory_warning = {{
		if (macro("$nscp_memory_free$") == false) { return 80 } else { return 20 }
	}}
	vars.nscp_memory_critical = {{
		if (macro("$nscp_memory_free$") == false) { return 90 } else { return 10 }
	}}
}

object CheckCommand "my-nscp-local-disk" {
	import "my-nscp-local"

	arguments += {
		"--drive" = {
			value = "$nscp_disk_drive$"
			repeat_key = true
		}
		"--warning" = {
			value = "$nscp_disk_op$ $nscp_disk_warning$"
		}
		"--critical" = {
			value = "$nscp_disk_op$ $nscp_disk_critical$"
		}
		"-a" = {
			value = "$nscp_disk_arguments$"
			skip_key = true
		}
	}

	vars.nscp_query = "check_drivesize"
	vars.nscp_showall = "$nscp_disk_showall$"

	vars.nscp_disk_op = {{
		if (macro("$nscp_disk_free$") == false) {
			return "used >"
		} else {
			return "free <"
		}
	}}

	vars.nscp_disk_showall = true
	vars.nscp_disk_free = false
	vars.nscp_disk_warning = {{
		if (macro("$nscp_disk_free$") == false) { return 80 } else { return 20 }
	}}
	vars.nscp_disk_critical = {{
		if (macro("$nscp_disk_free$") == false) { return 90 } else { return 10 }
	}}
}

object CheckCommand "my-nscp-local-service" {
	import "my-nscp-local"

	arguments += {
		"--service" = {
			value = "$nscp_service_name$"
			repeat_key = true
		}
    "--ok" = {
      value = "$nscp_service_otype$='$nscp_service_ok$'"
    }
    "--warning" = {
      value = "$nscp_service_wtype$='$nscp_service_warning$'"
    }
    "--critical" = {
      value = "$nscp_service_ctype$='$nscp_service_critical$'"
    }
		"-a" = {
			value = "$nscp_service_arguments$"
			skip_key = true
		}
	}

	vars.nscp_query = "check_service"
	vars.nscp_showall = "$nscp_service_showall$"

	vars.nscp_service_showall = true
	vars.nscp_service_type = "state"
	vars.nscp_service_otype = vars.nscp_service_type
	vars.nscp_service_wtype = vars.nscp_service_type
	vars.nscp_service_ctype = vars.nscp_service_type
}

object CheckCommand "my-nscp-local-counter" {
	import "my-nscp-local"

	arguments += {
		"--counter" = {
			value = "$nscp_counter_name$"
			repeat_key = true
		}
		"--warning" = {
			value = "value $nscp_counter_op$ $nscp_counter_warning$"
		}
		"--critical" = {
			value = "value $nscp_counter_op$ $nscp_counter_critical$"
		}
		"-a" = {
			value = "$nscp_counter_arguments$"
			skip_key = true
		}
	}

  vars.nscp_counter_op = {{
    if (macro("$nscp_counter_less$") == false) {
      return ">"
    } else {
      return "<"
    }
  }}

	vars.nscp_query = "check_pdh"
	vars.nscp_showall = "$nscp_counter_showall$"
  vars.nscp_counter_less = false
}
